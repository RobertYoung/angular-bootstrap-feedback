/**
 * angular-bootstrap-feedback - User feedback form for angular with screenshot and highlighting
 * @author Robert Young
 * @version v1.0.2
 * @link https://robertyoung.github.io/angular-bootstrap-feedback/
 * @license MIT
 * This file is auto-generated. Please modify the Typescript related file.
 */
angular.module("angular.bootstrap.feedback",["ui.bootstrap"]);var AngularBootstrapFeedback;!function(t){var e=function(){function t(){this.transclude=!0,this.bindings={options:"=?"},this.controller=["angularBootstrapFeedbackFactory","$transclude",o],this.templateUrl="angular.bootstrap.feedback.button.html"}return t}();t.Button=e;var o=function(){function t(t,e){this.factory=t,this.transclude=e}return t.prototype.$onInit=function(){this.factory.setOptions(this.options)},t.prototype.openModal=function(){var t=this;this.options.sendFeedbackButtonPressed&&this.options.sendFeedbackButtonPressed(),this.transclude(function(e){t.factory.transcludedContent=e}),this.factory.openModal()},t.prototype.cancelScreenshotPressed=function(){this.factory.options.cancelScreenshotOptionsButtonPressed&&this.factory.options.cancelScreenshotOptionsButtonPressed(),this.factory.isScreenshotMode=!1,this.factory.showModal(),this.factory.destroyCanvas(),this.factory.hideSendFeedback()},t.prototype.takeScreenshotPressed=function(){this.factory.options.takeScreenshotOptionsButtonPressed&&this.factory.options.takeScreenshotOptionsButtonPressed(),this.factory.takeScreenshot()},t}()}(AngularBootstrapFeedback||(AngularBootstrapFeedback={})),angular.module("angular.bootstrap.feedback").component("angularBootstrapFeedback",new AngularBootstrapFeedback.Button);var AngularBootstrapFeedback;!function(t){var e=function(){function t(t,e){this.factory=t,this.$detection=e,this.factory.resetScreenshot(),this.factory.appendTransclodedContent()}return t.prototype.closeModal=function(){this.factory.closeModal()},t.prototype.submitButtonPressed=function(t){this.factory.options.submitButtonPressed&&this.factory.options.submitButtonPressed(t)},t}();t.ModalController=e}(AngularBootstrapFeedback||(AngularBootstrapFeedback={}));var AngularBootstrapFeedback;!function(t){var e=function(){function e(t,e,o,n){var s=this;this.$uibModal=t,this.$document=e,this.$templateCache=o,this.$timeout=n,this.options={},this.modalElementSelector="div[uib-modal-window]",this.modalBackdropElementSelector="div[uib-modal-backdrop]",this.sendFeedbackElementSelector="div.send-feedback",this.modalBodyElementSelector=this.modalElementSelector+" .modal-body",this.isDrawing=!1,this.onMouseDown=function(t){s.centerX=t.pageX,s.centerY=t.pageY,s.ctx.beginPath(),s.isDrawing=!0,s.redraw()},this.onMouseMove=function(t){if(s.isDrawing){var e=t.pageX-s.centerX,o=t.pageY-s.centerY;s.ctx.clearRect(0,0,s.$document.width(),s.$document.height()),s.addAlphaBackground(),s.ctx.clearRect(s.centerX,s.centerY,e,o),s.redraw()}},this.onMouseUp=function(t){s.isDrawing=!1;var e=t.pageX-s.centerX,o=t.pageY-s.centerY;s.ctx.fillStyle="rgba(0,0,0,0)",s.ctx.strokeRect(s.centerX,s.centerY,e,o),s.ctx.fillRect(s.centerX,s.centerY,e,o);var n='<div class="feedback-highlight" style="position:absolute;top:'+s.centerY+"px;left:"+s.centerX+"px;width:"+e+"px;height:"+o+'px;z-index:30000;"></div>';angular.element("body").append(n),s.redraw(),s.options.highlightDrawn&&s.options.highlightDrawn(angular.element(n))},this.isOpen=!1}return e.prototype.hideSendFeedback=function(){var t=angular.element(this.sendFeedbackElementSelector);t.addClass("hidden")},e.prototype.showSendFeedback=function(){var t=angular.element(this.sendFeedbackElementSelector);t.removeClass("hidden")},e.prototype.openModal=function(){var e=this;if(!this.isOpen){this.hideSendFeedback();var o={animation:!0,size:"lg",template:this.$templateCache.get("angular.bootstrap.feedback.modal.html"),controller:["angularBootstrapFeedbackFactory",t.ModalController],controllerAs:"$ctrl"};this.$uibModalInstance=this.$uibModal.open(o),this.$uibModalInstance.result.then(function(){},function(){e.options.modalDismissed&&(e.showSendFeedback(),e.options.modalDismissed(),e.isOpen=!1)}),this.isOpen=!0}},e.prototype.hideModal=function(){if(this.isOpen){var t=angular.element(this.modalElementSelector),e=angular.element(this.modalBackdropElementSelector);t.addClass("hidden"),e.addClass("hidden"),this.isOpen=!1}},e.prototype.showModal=function(){if(!this.isOpen){var t=angular.element(this.modalElementSelector),e=angular.element(this.modalBackdropElementSelector);t.removeClass("hidden"),e.removeClass("hidden"),this.isOpen=!0}},e.prototype.closeModal=function(){this.isOpen&&(this.showSendFeedback(),this.$uibModalInstance.close(),this.destroyCanvas(),this.options.modalDismissed&&this.options.modalDismissed(),this.isOpen=!1)},e.prototype.appendTransclodedContent=function(){var t=this;this.$timeout(function(){var e=angular.element(t.modalBodyElementSelector);e.append(t.transcludedContent)})},e.prototype.setOptions=function(t){t=t||{},this.options=t,this.options.modalTitle=t.modalTitle?t.modalTitle:"Feedback",this.options.takeScreenshotButtonText=t.takeScreenshotButtonText?t.takeScreenshotButtonText:"Take Screenshot",this.options.submitButtonText=t.submitButtonText?t.submitButtonText:"Submit",this.options.sendFeedbackButtonText=t.sendFeedbackButtonText?t.sendFeedbackButtonText:"Send Feedback",this.options.cancelScreenshotOptionsButtonText=t.cancelScreenshotOptionsButtonText?t.cancelScreenshotOptionsButtonText:"Cancel",this.options.takeScreenshotOptionsButtonText=t.takeScreenshotOptionsButtonText?t.takeScreenshotOptionsButtonText:"Take Screenshot"},e.prototype.getUserAgentInfo=function(){},e.prototype.takeScreenshot=function(){var t=this,e={onrendered:function(e){t.isScreenshotMode=!1,t.showModal(),t.destroyCanvas(),e.style.width="100%",e.style.borderRadius="12px",t.$timeout(function(){t.screenshotBase64=e.toDataURL(),t.options.screenshotTaken&&t.options.screenshotTaken(t.screenshotBase64,e)})}};this.hideModal(),this.hideSendFeedback(),html2canvas(document.body,e)},e.prototype.resetScreenshot=function(){this.screenshotBase64=null},e.prototype.destroyCanvas=function(){this.removeDocumentEvents();var t=angular.element("#"+e.CANVAS_ID);t&&t.remove();var o=angular.element("."+e.FEEDBACK_HIGHLIGHT_CLASS);o.remove(),this.ctx=null},e.prototype.setupDocumentEvents=function(){var t=this;this.$document.on("mousedown",function(e){t.onMouseDown(e)}),this.$document.on("mouseup",function(e){t.onMouseUp(e)}),this.$document.on("mousemove",function(e){t.onMouseMove(e)})},e.prototype.removeDocumentEvents=function(){this.$document.off("mousedown"),this.$document.off("mouseup"),this.$document.off("mousemove")},e.prototype.addAlphaBackground=function(){if(!this.ctx)throw Error("User feedback context does not exist");this.ctx.fillStyle="rgba(102,102,102,0.5)",this.ctx.fillRect(0,0,this.$document.width(),this.$document.height())},e.prototype.createCanvas=function(){if(!this.ctx){var t='<canvas id="'+e.CANVAS_ID+'"></canvas>',o=angular.element("body");o.append(t),angular.element("#"+e.CANVAS_ID).attr({width:this.$document.width(),height:this.$document.height(),style:"top: 0"});var n=document.getElementById(e.CANVAS_ID);this.ctx=n.getContext("2d"),this.setupDocumentEvents(),this.addAlphaBackground()}},e.prototype.reset=function(){var t=document.getElementById(e.CANVAS_ID);t.width=t.width},e.prototype.redraw=function(){var t=this,o=angular.element("."+e.FEEDBACK_HIGHLIGHT_CLASS);o.each(function(e,o){t.ctx.clearRect(parseInt(o.style.left),parseInt(o.style.top),parseInt(o.style.width),parseInt(o.style.height)),t.ctx.strokeRect(parseInt(o.style.left),parseInt(o.style.top),parseInt(o.style.width),parseInt(o.style.height)),t.ctx.fillRect(parseInt(o.style.left),parseInt(o.style.top),parseInt(o.style.width),parseInt(o.style.height))})},e.$inject=["$uibModal","$document","$templateCache","$timeout"],e.CANVAS_ID="feedback-canvas",e.FEEDBACK_HIGHLIGHT_CLASS="feedback-highlight",e}();t.Factory=e}(AngularBootstrapFeedback||(AngularBootstrapFeedback={})),angular.module("angular.bootstrap.feedback").service("angularBootstrapFeedbackFactory",AngularBootstrapFeedback.Factory);var AngularBootstrapFeedback;!function(t){var e=function(){function t(){this.controller=["angularBootstrapFeedbackFactory",o],this.templateUrl="angular.bootstrap.feedback.screenshot.html"}return t}();t.Screenshot=e;var o=function(){function t(t){this.factory=t}return t.prototype.takeScreenshotButtonPressed=function(){this.factory.options.takeScreenshotButtonPressed&&this.factory.options.takeScreenshotButtonPressed(),this.factory.showSendFeedback(),this.factory.hideModal(),this.factory.isScreenshotMode=!0,this.factory.createCanvas()},t}()}(AngularBootstrapFeedback||(AngularBootstrapFeedback={})),angular.module("angular.bootstrap.feedback").component("angularBootstrapFeedbackScreenshot",new AngularBootstrapFeedback.Screenshot),angular.module("angular.bootstrap.feedback").run(["$templateCache",function(t){t.put("angular.bootstrap.feedback.button.html",'<div class="send-feedback"><div ng-if="!$ctrl.factory.isScreenshotMode" ng-click="$ctrl.openModal()">{{$ctrl.factory.options.sendFeedbackButtonText}} <span class="glyphicon glyphicon-comment" aria-hidden="true"></span></div><div ng-if="$ctrl.factory.isScreenshotMode"><span>Options</span><div class="row"><div class="col-xs-12"><button class="btn btn-danger col-xs-12" ng-click="$ctrl.cancelScreenshotPressed()">{{$ctrl.factory.options.cancelScreenshotOptionsButtonText}}</button></div></div><div class="row"><div class="col-xs-12"><button class="btn btn-success col-xs-12" ng-click="$ctrl.takeScreenshotPressed()">{{$ctrl.factory.options.takeScreenshotOptionsButtonText}}</button></div></div></div></div>'),t.put("angular.bootstrap.feedback.modal.html",'<form novalidate="" name="userFeedbackForm"><div class="modal-header"><h3 class="modal-title pull-left">{{$ctrl.factory.options.modalTitle}}</h3><a><i class="glyphicon glyphicon-remove pull-right add-margin-right-1 close-modal-button" style="font-size: 18px" data-ng-click="$ctrl.closeModal(); $event.stopPropagation()"></i></a></div><div class="modal-body"></div><div class="modal-footer"><button class="btn btn-primary" type="submit" ng-click="$ctrl.submitButtonPressed(userFeedbackForm)">{{$ctrl.factory.options.submitButtonText}}</button></div></form>'),t.put("angular.bootstrap.feedback.screenshot.html",'<div class="feedback-screenshot"><img ng-src="{{$ctrl.factory.screenshotBase64}}"></div><div class="btn-toolbar"><button class="btn btn-default" type="button" ng-click="$ctrl.takeScreenshotButtonPressed()"><span class="glyphicon glyphicon-camera" aria-hidden="true"></span> {{$ctrl.factory.options.takeScreenshotButtonText}}</button></div>')}]);